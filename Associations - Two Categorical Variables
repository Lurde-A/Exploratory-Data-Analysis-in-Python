The sample we’ll be working with contains responses to the following:
influence:   yes = I have a natural talent for influencing people; no = I am not good at influencing people.
blend_in:    yes = I prefer to blend in with the crowd;            no = I like to be the center of attention.
special:     yes = I think I am a special person;                  no = I am no better or worse than most people.
leader:      yes = I see myself as a good leader;                  no = I am not sure if I would make a good leader.
authority:   yes = I like to have authority over other people;     no = I don’t mind following orders.

                                      INTRODUCTION
  1. Data from the Narcissistic Personality Inventory (NPI) has been loaded in the workspace as a dataframe named npi. Print the first five rows of this dataframe using the .head().
Which of these variables do you think might be associated?
GIVEN:
import pandas as pd
import codecademylib3
npi = pd.read_csv("npi_sample.csv")
//
print(npi.head())                                       RESULT:
                                                      	influence	blend_in	special	leader	authority
                                                      0	no	      yes	      yes	    yes	    yes
                                                      1	no	      yes	      no	    no	    no
                                                      2	yes	      no	      yes	    yes	    yes
                                                      3	yes	      no	      no	    yes	    yes
                                                      4	yes	      yes	      no	    yes	    no

                                      CONTINGENCY TABLES: FREQUENCIES
  2. Do you think there will be an association between special (whether or not a person sees themself as “special”) and authority (whether or not a person likes to have authority)? 
Create a contingency table for these two variables and store the table as special_authority_freq, then print out the result. Based on this table, do you think the variables are associated?
//
special_authority_freq = pd.crosstab(npi.special, npi.authority)
print(special_authority_freq)                           RESULT:
                                                      	authority    no   yes
                                                      	special              
                                                      	no         4069  1905
                                                      	yes        2229  2894      People who don't see themselves as a "special", neither think they have authority over others.

                                      CONTINGENCY TABLES: PROPORTIONS
  3. The contingency table of frequencies for special (whether or not a person sees themself as “special”) and authority (whether or not a person likes to have authority) is saved for you 
as special_authority_freq. Convert this table of frequencies to a table of proportions and save the result as special_authority_prop, then print it out.
GIVEN: 
import pandas as pd
import numpy as np
npi = pd.read_csv("npi_sample.csv")
special_authority_freq = pd.crosstab(npi.special, npi.authority)
//
special_authority_prop = special_authority_freq / len(npi)
print(special_authority_prop)                           RESULT:
                                                      	authority        no       yes
                                                      	special                      
                                                      	no         0.366676  0.171668
                                                      	yes        0.200865  0.260791

                                      MARGINAL PROPORTIONS
  4. The solution code from the previous exercise has been provided in script.py to create a contingency table of proportions (saved as special_authority_prop) for the special and 
authority columns. Use this to calculate the marginal proportions for the authority variable and save the result as authority_marginals.
Print out authority_marginals. Do more people like to have authority over people or not?
GIVEN:
import numpy as np
npi = pd.read_csv("npi_sample.csv")
  # save the table of frequencies as special_authority_freq:
special_authority_freq = pd.crosstab(npi.special, npi.authority)
  # save the table of proportions as special_authority_prop:
special_authority_prop = special_authority_freq/len(npi)
//
